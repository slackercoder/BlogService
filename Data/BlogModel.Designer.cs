//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BlogModel", "FK_BlogPost_PostContent", "BlogPost", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.BlogPost), "PostContent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.PostContent), true)]

#endregion

namespace Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BlogEntities : ObjectContext, IDisposable
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BlogEntities object using the connection string found in the 'BlogEntities' section of the application configuration file.
        /// </summary>
        public BlogEntities() : base("name=BlogEntities", "BlogEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BlogEntities object.
        /// </summary>
        public BlogEntities(string connectionString) : base(connectionString, "BlogEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BlogEntities object.
        /// </summary>
        public BlogEntities(EntityConnection connection) : base(connection, "BlogEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Blog> Blogs
        {
            get
            {
                if ((_Blogs == null))
                {
                    _Blogs = base.CreateObjectSet<Blog>("Blogs");
                }
                return _Blogs;
            }
        }
        private ObjectSet<Blog> _Blogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlogPost> BlogPosts
        {
            get
            {
                if ((_BlogPosts == null))
                {
                    _BlogPosts = base.CreateObjectSet<BlogPost>("BlogPosts");
                }
                return _BlogPosts;
            }
        }
        private ObjectSet<BlogPost> _BlogPosts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PostContent> PostContents
        {
            get
            {
                if ((_PostContents == null))
                {
                    _PostContents = base.CreateObjectSet<PostContent>("PostContents");
                }
                return _PostContents;
            }
        }
        private ObjectSet<PostContent> _PostContents;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Blogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogs(Blog blog)
        {
            base.AddObject("Blogs", blog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlogPosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogPosts(BlogPost blogPost)
        {
            base.AddObject("BlogPosts", blogPost);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostContents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostContents(PostContent postContent)
        {
            base.AddObject("PostContents", postContent);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlogModel", Name="Blog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Blog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Blog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Blog CreateBlog(global::System.Int32 id, global::System.String name)
        {
            Blog blog = new Blog();
            blog.Id = id;
            blog.Name = name;
            return blog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlogModel", Name="BlogPost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogPost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlogPost object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="postTitle">Initial value of the PostTitle property.</param>
        public static BlogPost CreateBlogPost(global::System.Int32 id, global::System.String postTitle)
        {
            BlogPost blogPost = new BlogPost();
            blogPost.Id = id;
            blogPost.PostTitle = postTitle;
            return blogPost;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostTitle
        {
            get
            {
                return _PostTitle;
            }
            set
            {
                OnPostTitleChanging(value);
                ReportPropertyChanging("PostTitle");
                _PostTitle = StructuralObject.SetValidValue(value, false, "PostTitle");
                ReportPropertyChanged("PostTitle");
                OnPostTitleChanged();
            }
        }
        private global::System.String _PostTitle;
        partial void OnPostTitleChanging(global::System.String value);
        partial void OnPostTitleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlogModel", "FK_BlogPost_PostContent", "PostContent")]
        public EntityCollection<PostContent> PostContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostContent>("BlogModel.FK_BlogPost_PostContent", "PostContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostContent>("BlogModel.FK_BlogPost_PostContent", "PostContent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlogModel", Name="PostContent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PostContent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PostContent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="blogPostId">Initial value of the BlogPostId property.</param>
        /// <param name="postConent">Initial value of the PostConent property.</param>
        public static PostContent CreatePostContent(global::System.Int32 id, global::System.Int32 blogPostId, global::System.String postConent)
        {
            PostContent postContent = new PostContent();
            postContent.Id = id;
            postContent.BlogPostId = blogPostId;
            postContent.PostConent = postConent;
            return postContent;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogPostId
        {
            get
            {
                return _BlogPostId;
            }
            set
            {
                OnBlogPostIdChanging(value);
                ReportPropertyChanging("BlogPostId");
                _BlogPostId = StructuralObject.SetValidValue(value, "BlogPostId");
                ReportPropertyChanged("BlogPostId");
                OnBlogPostIdChanged();
            }
        }
        private global::System.Int32 _BlogPostId;
        partial void OnBlogPostIdChanging(global::System.Int32 value);
        partial void OnBlogPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostConent
        {
            get
            {
                return _PostConent;
            }
            set
            {
                OnPostConentChanging(value);
                ReportPropertyChanging("PostConent");
                _PostConent = StructuralObject.SetValidValue(value, false, "PostConent");
                ReportPropertyChanged("PostConent");
                OnPostConentChanged();
            }
        }
        private global::System.String _PostConent;
        partial void OnPostConentChanging(global::System.String value);
        partial void OnPostConentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlogModel", "FK_BlogPost_PostContent", "BlogPost")]
        public BlogPost BlogPost
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogPost>("BlogModel.FK_BlogPost_PostContent", "BlogPost").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogPost>("BlogModel.FK_BlogPost_PostContent", "BlogPost").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogPost> BlogPostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogPost>("BlogModel.FK_BlogPost_PostContent", "BlogPost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogPost>("BlogModel.FK_BlogPost_PostContent", "BlogPost", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
